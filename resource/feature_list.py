###########################
# -*- coding: utf-8 -*-
# eval.c から, feature-list をとってくる.
# help は信用できない
###########################

# import {{{
import re
import sys
# }}}

if len(sys.argv) < 2:
  print('Usage: feature-list.py evalfunc.c')
  sys.exit(2)


with open(sys.argv[1], 'r') as fp:
  for line in fp:
    if re.match('^f_has\(', line):
      break

  dict = {}
  for line in fp:
    if re.match('^\s*".*",.*', line):
      m = re.search('".*"', line)
      line = line[m.start()+1: m.end()-1].lower()
      dict[line] = 1
      if re.match('.*win32.*', line):
        win64 = line.replace('win32', 'win64')
        dict[win64] = 1
    elif re.match('^\s*NULL', line):
      break

  for line in fp:
    if re.match('\s*else if \(STRICMP\(name, "[0-9a-zA-Z_]+"\) ', line):
      m = re.search('".*"', line)
      line = line[m.start()+1: m.end()-1].lower()
      dict[line] = 1
    elif re.match('^}', line):
      break

print("""scriptencoding utf-8
" this file is generated by resource/feature_list.py

let s:save_cpo = &cpo
set cpo&vim

function! s:init() abort " {{{
" help の情報は漏れが多く, 信用できない
  let feature = {""")

keys = dict.keys()
for k in sorted(keys):
  print("\ '{0}': 1,".format(k))


print("""\} " }}}

  " kaoriya {{{
  let kaoriya = {
        \ 'kaoriya': 1,
        \ 'migemo': 1,
        \ 'guess_encode': 1,
        \ } " }}}

  " old version {{{
  let old = {
\ 'dos16': 1,
\ 'dos32': 1,
\ 'gui_win16': 1,
\ 'os2': 1,
\ 'sniff': 1,
\ 'win16': 1,
\ 'win95': 1,
\ } " }}}

  let dict = feature
  let dict = extend(dict, kaoriya)
  let dict = extend(dict, old)
  let dict['gui_macvim'] = 1
  let dict['gui_kde'] = 1
  let dict['gui_qt'] = 1
  let dict['nvim'] = 1

  return dict
endfunction " }}}

let s:dict = s:init()

function! vimlint#feature#list() abort " {{{
  return s:dict
endfunction " }}}

let &cpo = s:save_cpo
unlet s:save_cpo""")

# vim:set et ts=2 sts=2 sw=2 tw=0 fdm=marker:
